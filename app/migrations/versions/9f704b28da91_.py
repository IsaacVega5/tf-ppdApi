"""empty message

Revision ID: 9f704b28da91
Revises: c958cd85c5d5
Create Date: 2025-01-22 22:31:29.125929

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '9f704b28da91'
down_revision: Union[str, None] = 'c958cd85c5d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('institution_type',
    sa.Column('institution_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_institution_type', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_institution_type')
    )
    op.create_table('user_rol',
    sa.Column('user_rol_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_user_rol', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_user_rol')
    )
    op.create_table('institution',
    sa.Column('institution_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_institution_type', sa.Integer(), nullable=True),
    sa.Column('id_institution', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['id_institution_type'], ['institution_type.id_institution_type'], ),
    sa.PrimaryKeyConstraint('id_institution')
    )
    op.create_table('user_institution',
    sa.Column('id_user', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_institution', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_user_rol', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_institution'], ['institution.id_institution'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.ForeignKeyConstraint(['id_user_rol'], ['user_rol.id_user_rol'], ),
    sa.PrimaryKeyConstraint('id_user', 'id_institution')
    )
    op.create_unique_constraint(None, 'user', ['id_user'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_table('user_institution')
    op.drop_table('institution')
    op.drop_table('user_rol')
    op.drop_table('institution_type')
    # ### end Alembic commands ###
